---
description:
globs:
alwaysApply: true
---
# Truco Uruguayo - Code Standards

## Python Development Standards

### Required Standards
- **Python with Docstrings**: All functions, classes, and modules must have proper docstrings
- **Python with Typing Always**: Full type hints for all function parameters, return types, and variables where helpful
- **Google Docstring Standard**: Use Google's docstring format with Args, Returns, Raises sections
- **Meaningful Comments Only**: Do not include unnecessary comments; only add comments when they provide genuine value for understanding complex logic

### Docstring Format Example
```python
def example_function(param1: str, param2: int) -> bool:
    """Brief description of what the function does.

    Args:
        param1: Description of param1.
        param2: Description of param2.

    Returns:
        Description of return value.

    Raises:
        ValueError: When invalid input is provided.
    """
    return True
```

### Type Hints Requirements
- All function parameters must have type hints
- All function return types must be specified
- Use appropriate types from typing module when needed (List, Dict, Optional, Union, etc.)
- Class attributes should have type hints when not obvious from context

### Code Quality
- Follow PEP 8 style guidelines
- Use meaningful variable and function names
- Keep functions focused and single-purpose
- Maintain consistency with existing codebase patterns

### Documentation Requirements
- Module-level docstrings for all Python files
- Class docstrings explaining purpose and key attributes
- Method docstrings following Google format
- Document complex algorithms or business logic with meaningful comments only